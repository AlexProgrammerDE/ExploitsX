package me.bait.exploitfixer.chatco;

import java.io.IOException;
import java.text.Normalizer;
import java.util.HashMap;
import java.util.List;
import java.util.function.Predicate;

import org.bukkit.Bukkit;
import org.bukkit.ChatColor;
import org.bukkit.configuration.file.YamlConfiguration;
import org.bukkit.entity.Player;
import org.bukkit.event.player.AsyncPlayerChatEvent;
import org.bukkit.event.player.PlayerQuitEvent;

import me.bait.exploitfixer.Messages;
import me.bait.exploitfixer.ExploitFixer;
import me.bait.exploitfixer.gameplay.RegisterStats;
import me.bait.exploitfixer.util.API;
import me.bait.exploitfixer.util.CH;

//-- // WARNING \\ -- 
//-- PORTIONS OF THIS WORK IS UNDER EXCLUSIVE COPRIGHT FOR BAITCORP LABS. DISTRIBUTION, MODIFICATION, SELLING, OR SHARING WITHOUT EXPLICIT PERMISSION FROM BAITCORP LABS IS STRICTLY PROHIBITED.
//-- THIS PROGRAM IS LICENSED FOR MODIFICATION TO AND ONLY TO: "BAITCORP LABS" [FR], "CCHOST PARIS" [FR].
//-- 
//-- DECOMPILING, COPYING OR REDISTRIBUTING THIS CODE IS A CRIME. IF YOU HAVE ANY QUESTIONS OR CONCERNS
//-- THEY MUST BE VOICED DIRECTLY TO BAITCORP EXECUTIVES BEFORE PERSONAL ACTION.
//-- 
//-- ExploitsX Sebastian Giheta 2019-2020
//-- //         \\ -- 

public class AllChat {
	private static String CANCEL = Messages.getString("AC.0"); //$NON-NLS-1$
	private static String zz = "!#";
	public static ExploitFixer plugin;

	public static HashMap<Player, Double> vlchat = new HashMap<Player, Double>();
	private static HashMap<Player, String> lastm = new HashMap<Player, String>();
	private static HashMap<Player, String> lastm2 = new HashMap<Player, String>();
	private static HashMap<Player, String> lastm3 = new HashMap<Player, String>();
	private static HashMap<Player, String> lastm4 = new HashMap<Player, String>();
	private static HashMap<Player, String> lastm5 = new HashMap<Player, String>();
	private static HashMap<Player, String> lastm6 = new HashMap<Player, String>();

	@SuppressWarnings("unused")
	private static boolean enablecw = CH.getBoolean(Messages.getString("AC.1"), false); //$NON-NLS-1$
	private static boolean debug = CH.getBoolean(Messages.getString("AC.4"), false); //$NON-NLS-1$
	private static boolean useai = CH.getBoolean(Messages.getString("AC.172"), true);
	private static boolean logflags = CH.getBoolean(Messages.getString("AC.188"));
	private static boolean alerttoadmins = CH.getBoolean(Messages.getString("AC.193"), false);
	private static boolean chatfilter = CH.getBoolean(Messages.getString("AC.142"), true);

	private static int kickpoint = CH.getInt(Messages.getString("AC.203"), 20);
	private static int tippingpoint = CH.getInt(Messages.getString("AC.199"), 15);
	private static double similarity = CH.getDouble(Messages.getString("AC.3")); //$NON-NLS-1$

	private static List<String> blacklistwords = CH.getStringList(Messages.getString("AC.179"));
	private static List<String> redflagwords = CH.getStringList(Messages.getString("AC.187"));
	private static List<String> chatexempt = CH.getStringList(Messages.getString("AC.178"));
	private static List<String> swhitelist = CH.getStringList(Messages.getString("AC.2")); //$NON-NLS-1$

	private static String spamsg = CH.getString(Messages.getString("AC.5")); //$NON-NLS-1$
	private static String a = CH.getString(Messages.getString("AC.6"));
	private static String c = CH.getString(Messages.getString("AC.8"));
	private static String d = CH.getString(Messages.getString("AC.9"));
	private static String f = CH.getString(Messages.getString("AC.11"));
	private static String g = CH.getString(Messages.getString("AC.12"));
	private static String i = CH.getString(Messages.getString("AC.14"));
	private static String j = CH.getString(Messages.getString("AC.15"));
	private static String l = CH.getString(Messages.getString("AC.17"));
	private static String m = CH.getString(Messages.getString("AC.18"));

	private static String n = CH.getString(Messages.getString("AC.21"));
	private static String o = CH.getString(Messages.getString("AC.24"));
	private static String p = CH.getString(Messages.getString("AC.27"));
	private static String q = CH.getString(Messages.getString("AC.30"));
	private static String r = CH.getString(Messages.getString("AC.33"));
	private static String s = CH.getString(Messages.getString("AC.36"));
	private static String t = CH.getString(Messages.getString("AC.39"));
	private static String u = CH.getString(Messages.getString("AC.42"));
	private static String v = CH.getString(Messages.getString("AC.45"));

	private static String w = CH.getString(Messages.getString("AC.48"));
	private static String x = CH.getString(Messages.getString("AC.51"));
	private static String y = CH.getString(Messages.getString("AC.54"));
	private static String z = CH.getString(Messages.getString("AC.57"));
	private static String aa = CH.getString(Messages.getString("AC.60"));
	private static String ab = CH.getString(Messages.getString("AC.63"));
	private static String ac = CH.getString(Messages.getString("AC.20"));
	private static String ad = CH.getString(Messages.getString("AC.23"));
	private static String ae = CH.getString(Messages.getString("AC.26"));

	private static String af = CH.getString(Messages.getString("AC.29"));
	private static String ag = CH.getString(Messages.getString("AC.32"));
	private static String ah = CH.getString(Messages.getString("AC.35"));
	private static String ai = CH.getString(Messages.getString("AC.38"));
	private static String aj = CH.getString(Messages.getString("AC.41"));
	private static String ak = CH.getString(Messages.getString("AC.44"));
	private static String al = CH.getString(Messages.getString("AC.47"));
	private static String am = CH.getString(Messages.getString("AC.50"));
	private static String an = CH.getString(Messages.getString("AC.53"));

	private static String ao = CH.getString(Messages.getString("AC.56"));
	private static String ap = CH.getString(Messages.getString("AC.59"));
	private static String aq = CH.getString(Messages.getString("AC.62"));
	private static String ar = CH.getString(Messages.getString("AC.65"));

	private static String as = CH.getString(Messages.getString("AC.66"), zz);
	private static String at = CH.getString(Messages.getString("AC.70"), zz);
	private static String au = CH.getString(Messages.getString("AC.74"), zz);
	private static String av = CH.getString(Messages.getString("AC.78"), zz);
	private static String aw = CH.getString(Messages.getString("AC.82"), zz);
	private static String ax = CH.getString(Messages.getString("AC.86"), zz);
	private static String ay = CH.getString(Messages.getString("AC.90"), zz);

	private static String az = CH.getString(Messages.getString("AC.94"), zz);
	private static String ba = CH.getString(Messages.getString("AC.98"), zz);
	private static String bb = CH.getString(Messages.getString("AC.102"), zz);
	private static String bc = CH.getString(Messages.getString("AC.106"), zz);
	private static String bd = CH.getString(Messages.getString("AC.110"), zz);
	private static String be = CH.getString(Messages.getString("AC.114"), zz);
	private static String bf = CH.getString(Messages.getString("AC.118"), zz);

	private static String bg = CH.getString(Messages.getString("AC.122"), zz);
	private static String bh = CH.getString(Messages.getString("AC.126"), zz);
	private static String bi = CH.getString(Messages.getString("AC.130"), zz);
	private static String bj = CH.getString(Messages.getString("AC.134"), zz);
	private static String bk = CH.getString(Messages.getString("AC.138"), zz);

	public static String ColorCodeManager(String data, Player player) {
		if (!a.equals(Messages.getString("AC.7"))) //$NON-NLS-1$ //$NON-NLS-2$
			data = data.replace(c, ChatColor.WHITE.toString()); // $NON-NLS-1$
		if (!d.equals(Messages.getString("AC.10"))) //$NON-NLS-1$ //$NON-NLS-2$
			data = data.replace(f, ChatColor.RED.toString()); // $NON-NLS-1$
		if (!g.equals(Messages.getString("AC.13"))) //$NON-NLS-1$ //$NON-NLS-2$
			data = data.replace(i, ChatColor.BLACK.toString()); // $NON-NLS-1$
		if (!j.equals(Messages.getString("AC.16"))) //$NON-NLS-1$ //$NON-NLS-2$
			data = data.replace(l, ChatColor.DARK_RED.toString()); // $NON-NLS-1$
		if (!m.equals(Messages.getString("AC.19"))) //$NON-NLS-1$ //$NON-NLS-2$
			data = data.replace(ac, ChatColor.DARK_GRAY.toString()); // $NON-NLS-1$
		if (!n.equals(Messages.getString("AC.22"))) //$NON-NLS-1$ //$NON-NLS-2$
			data = data.replace(ad, ChatColor.DARK_BLUE.toString()); // $NON-NLS-1$
		if (!o.equals(Messages.getString("AC.25"))) //$NON-NLS-1$ //$NON-NLS-2$
			data = data.replace(ae, ChatColor.DARK_PURPLE.toString()); // $NON-NLS-1$
		if (!p.equals(Messages.getString("AC.28"))) //$NON-NLS-1$ //$NON-NLS-2$
			data = data.replace(af, ChatColor.BLUE.toString()); // $NON-NLS-1$
		if (!q.equals(Messages.getString("AC.31"))) //$NON-NLS-1$ //$NON-NLS-2$
			data = data.replace(ag, ChatColor.LIGHT_PURPLE.toString()); // $NON-NLS-1$
		if (!r.equals(Messages.getString("AC.34"))) //$NON-NLS-1$ //$NON-NLS-2$
			data = data.replace(ah, ChatColor.DARK_GREEN.toString()); // $NON-NLS-1$
		if (!s.equals(Messages.getString("AC.37"))) //$NON-NLS-1$ //$NON-NLS-2$
			data = data.replace(ai, ChatColor.GOLD.toString()); // $NON-NLS-1$
		if (!t.equals(Messages.getString("AC.40"))) //$NON-NLS-1$ //$NON-NLS-2$
			data = data.replace(aj, ChatColor.GREEN.toString()); // $NON-NLS-1$
		if (!u.equals(Messages.getString("AC.43"))) //$NON-NLS-1$ //$NON-NLS-2$
			data = data.replace(ak, ChatColor.YELLOW.toString()); // $NON-NLS-1$
		if (!v.equals(Messages.getString("AC.46"))) //$NON-NLS-1$ //$NON-NLS-2$
			data = data.replace(al, ChatColor.DARK_AQUA.toString()); // $NON-NLS-1$
		if (!w.equals(Messages.getString("AC.49"))) //$NON-NLS-1$ //$NON-NLS-2$
			data = data.replace(am, ChatColor.AQUA.toString()); // $NON-NLS-1$
		if (!x.equals(Messages.getString("AC.52"))) //$NON-NLS-1$ //$NON-NLS-2$
			data = data.replace(an, ChatColor.GRAY.toString()); // $NON-NLS-1$
		if (!y.equals(Messages.getString("AC.55"))) //$NON-NLS-1$ //$NON-NLS-2$
			data = data.replace(ao, ChatColor.BOLD.toString()); // $NON-NLS-1$
		if (!z.equals(Messages.getString("AC.58"))) //$NON-NLS-1$ //$NON-NLS-2$
			data = data.replace(ap, ChatColor.ITALIC.toString()); // $NON-NLS-1$
		if (!aa.equals(Messages.getString("AC.61"))) //$NON-NLS-1$ //$NON-NLS-2$
			data = data.replace(aq, ChatColor.UNDERLINE.toString()); // $NON-NLS-1$
		if (!ab.equals(Messages.getString("AC.64"))) //$NON-NLS-1$ //$NON-NLS-2$
			data = data.replace(ar, ChatColor.STRIKETHROUGH.toString()); // $NON-NLS-1$
		if (data.length() == 2 && (data.contains(ChatColor.WHITE.toString()) || data.contains(ChatColor.RED.toString())
				|| data.contains(ChatColor.BLACK.toString()) || data.contains(ChatColor.DARK_RED.toString())
				|| data.contains(ChatColor.DARK_GRAY.toString()) || data.contains(ChatColor.DARK_BLUE.toString())
				|| data.contains(ChatColor.DARK_PURPLE.toString()) || data.contains(ChatColor.BLUE.toString())
				|| data.contains(ChatColor.LIGHT_PURPLE.toString()) || data.contains(ChatColor.DARK_GREEN.toString())
				|| data.contains(ChatColor.GOLD.toString()) || data.contains(ChatColor.GREEN.toString())
				|| data.contains(ChatColor.YELLOW.toString()) || data.contains(ChatColor.DARK_AQUA.toString())
				|| data.contains(ChatColor.AQUA.toString()) || data.contains(ChatColor.GRAY.toString())
				|| data.contains(ChatColor.BOLD.toString()) || data.contains(ChatColor.ITALIC.toString())
				|| data.contains(ChatColor.UNDERLINE.toString()) || data.contains(ChatColor.STRIKETHROUGH.toString())))
			return CANCEL;
		return data;
	}

	public static String ColorManager(String msg, Player player) {
		if ((!as // $NON-NLS-1$ //$NON-NLS-2$
				.equals(Messages.getString("AC.68"))) //$NON-NLS-1$
				&& (msg.startsWith(CH.getString(Messages.getString("AC.69"))))) //$NON-NLS-1$
			msg = ChatColor.GREEN.toString() + msg;
		if (!at.equals(Messages.getString("AC.72")) //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
				&& msg.startsWith(CH.getString(Messages.getString("AC.73")))) //$NON-NLS-1$
			msg = ChatColor.BLUE.toString() + msg;
		if (!au.equals(zz) // $NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
				&& msg.startsWith(CH.getString(Messages.getString("AC.77")))) //$NON-NLS-1$
			msg = ChatColor.RED.toString() + msg;
		if (!av.equals(zz) // $NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
				&& msg.startsWith(CH.getString(Messages.getString("AC.81")))) //$NON-NLS-1$
			msg = ChatColor.AQUA.toString() + msg;
		if (!aw.equals(zz) // $NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
				&& msg.startsWith(CH.getString(Messages.getString("AC.85")))) //$NON-NLS-1$
			msg = ChatColor.GOLD.toString() + msg;
		if (!ax.equals(zz) // $NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
				&& msg.startsWith(CH.getString(Messages.getString("AC.89")))) //$NON-NLS-1$
			msg = ChatColor.YELLOW.toString() + msg;
		if (!ay.equals(zz) // $NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
				&& msg.startsWith(CH.getString(Messages.getString("AC.93")))) //$NON-NLS-1$
			msg = ChatColor.GRAY.toString() + msg;
		if (!az.equals(zz) // $NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
				&& msg.startsWith(CH.getString(Messages.getString("AC.97")))) //$NON-NLS-1$
			msg = ChatColor.BLACK.toString() + msg;
		if (!ba.equals(zz) // $NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
				&& msg.startsWith(CH.getString(Messages.getString("AC.101")))) //$NON-NLS-1$
			msg = ChatColor.DARK_GREEN.toString() + msg;
		if (!bb // $NON-NLS-1$ //$NON-NLS-2$
				.equals(zz) // $NON-NLS-1$
				&& msg.startsWith(CH.getString(Messages.getString("AC.105")))) //$NON-NLS-1$
			msg = ChatColor.DARK_RED.toString() + msg;
		if (!bc // $NON-NLS-1$ //$NON-NLS-2$
				.equals(zz) // $NON-NLS-1$
				&& msg.startsWith(CH.getString(Messages.getString("AC.109")))) //$NON-NLS-1$
			msg = ChatColor.DARK_GRAY.toString() + msg;
		if (!bd // $NON-NLS-1$ //$NON-NLS-2$
				.equals(zz) // $NON-NLS-1$
				&& msg.startsWith(CH.getString(Messages.getString("AC.113")))) //$NON-NLS-1$
			msg = ChatColor.DARK_BLUE.toString() + msg;
		if (!be // $NON-NLS-1$ //$NON-NLS-2$
				.equals(zz) // $NON-NLS-1$
				&& msg.startsWith(CH.getString(Messages.getString("AC.117")))) //$NON-NLS-1$
			msg = ChatColor.DARK_AQUA.toString() + msg;
		if (!bf // $NON-NLS-1$ //$NON-NLS-2$
				.equals(zz) // $NON-NLS-1$
				&& msg.startsWith(CH.getString(Messages.getString("AC.121")))) //$NON-NLS-1$
			msg = ChatColor.DARK_PURPLE.toString() + msg;
		if (!bg // $NON-NLS-1$ //$NON-NLS-2$
				.equals(zz) // $NON-NLS-1$
				&& msg.startsWith(CH.getString(Messages.getString("AC.125")))) //$NON-NLS-1$
			msg = ChatColor.LIGHT_PURPLE.toString() + msg;
		if (!bh // $NON-NLS-1$ //$NON-NLS-2$
				.equals(zz) // $NON-NLS-1$
				&& msg.startsWith(CH.getString(Messages.getString("AC.129")))) //$NON-NLS-1$
			msg = ChatColor.UNDERLINE.toString() + msg;
		if (!bi // $NON-NLS-1$ //$NON-NLS-2$
				.equals(zz) // $NON-NLS-1$
				&& msg.startsWith(CH.getString(Messages.getString("AC.133")))) //$NON-NLS-1$
			msg = ChatColor.ITALIC.toString() + msg;
		if (!bj // $NON-NLS-1$ //$NON-NLS-2$
				.equals(zz) // $NON-NLS-1$
				&& msg.startsWith(CH.getString(Messages.getString("AC.137")))) //$NON-NLS-1$
			msg = ChatColor.BOLD.toString() + msg;
		if (!bk // $NON-NLS-1$ //$NON-NLS-2$
				.equals(zz) // $NON-NLS-1$
				&& msg.startsWith(CH.getString(Messages.getString("AC.141")))) //$NON-NLS-1$
			msg = ChatColor.STRIKETHROUGH.toString() + msg;
		return msg;
	}

	public static boolean containsCaseInsensitive(String s, List<String> l) {
		for (String string : l) {
			if (string.equalsIgnoreCase(s)) {
				return true;
			}
		}
		return false;
	}

	public static int onChat(String str, Player pla) {
		int cancelled = 0;
		int bad = 0;
		double vladd = 0.0;
		int risk = 0;
		// similarity
		if (chatfilter) { // $NON-NLS-1$
			String[] norme = { Messages.getString("AC.143"), Messages.getString("AC.144"), Messages.getString("AC.145"), //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
					Messages.getString("AC.146"), Messages.getString("AC.147"), Messages.getString("AC.148"), //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
					Messages.getString("AC.149"), Messages.getString("AC.150"), Messages.getString("AC.151"), //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
					Messages.getString("AC.152"), Messages.getString("AC.153"), Messages.getString("AC.154"), //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
					Messages.getString("AC.155"), //$NON-NLS-1$
					Messages.getString("AC.156"), Messages.getString("AC.157"), Messages.getString("AC.158"), //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
					Messages.getString("AC.159"), Messages.getString("AC.160"), Messages.getString("AC.161"), //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
					Messages.getString("AC.162"), Messages.getString("AC.163") }; //$NON-NLS-1$ //$NON-NLS-2$
			String newm = Normalizer.normalize(str.toLowerCase(), Normalizer.Form.NFD)
					.replace(Messages.getString("AC.164"), Messages.getString("AC.165")) //$NON-NLS-1$ //$NON-NLS-2$
					.toLowerCase();
			for (String i : norme) {
				newm = newm.replaceAll(i, Messages.getString("AC.166")); //$NON-NLS-1$
			}
			if (debug) {
				API.println(Messages.getString("AC.167") + pla.getName() + Messages.getString("AC.168") + str //$NON-NLS-1$ //$NON-NLS-2$
						+ Messages.getString("AC.169")); //$NON-NLS-1$
				API.println(Messages.getString("AC.170") + newm + Messages.getString("AC.171")); //$NON-NLS-1$ //$NON-NLS-2$
			}
			if (useai) { // $NON-NLS-1$
				if (similarity > 1 || similarity < 0) {
					Bukkit.getLogger().warning(Messages.getString("AC.173")); //$NON-NLS-1$
				} else {
					if (!lastm.containsKey(pla)) {
						lastm.put(pla, newm);
					} else if (!lastm2.containsKey(pla)) {
						String one = lastm.get(pla);
						lastm.put(pla, newm);
						lastm2.put(pla, one);
						if (Similarity.getSimilarity(lastm.get(pla), lastm2.get(pla)) >= similarity) {
							risk++;
						}
					} else if (!lastm3.containsKey(pla)) {
						String one = lastm.get(pla);
						String two = lastm2.get(pla);
						lastm.put(pla, newm);
						lastm2.put(pla, one);
						lastm3.put(pla, two);
						if (Similarity.getSimilarity(lastm.get(pla), lastm2.get(pla)) >= similarity) {
							risk++;
						}
						if (Similarity.getSimilarity(lastm.get(pla), lastm3.get(pla)) >= similarity) {
							risk++;
						}
					} else if (!lastm4.containsKey(pla)) {
						String one = lastm.get(pla);
						String two = lastm2.get(pla);
						String three = lastm3.get(pla);
						lastm.put(pla, newm);
						lastm2.put(pla, one);
						lastm3.put(pla, two);
						lastm4.put(pla, three);
						if (Similarity.getSimilarity(lastm.get(pla), lastm2.get(pla)) >= similarity) {
							risk++;
						}
						if (Similarity.getSimilarity(lastm.get(pla), lastm3.get(pla)) >= similarity) {
							risk++;
						}
						if (Similarity.getSimilarity(lastm.get(pla), lastm4.get(pla)) >= similarity) {
							risk++;
						}
					} else if (!lastm5.containsKey(pla)) {
						String one = lastm.get(pla);
						String two = lastm2.get(pla);
						String three = lastm3.get(pla);
						String four = lastm4.get(pla);
						lastm.put(pla, newm);
						lastm2.put(pla, one);
						lastm3.put(pla, two);
						lastm4.put(pla, three);
						lastm5.put(pla, four);
						if (Similarity.getSimilarity(lastm.get(pla), lastm2.get(pla)) >= similarity) {
							risk++;
						}
						if (Similarity.getSimilarity(lastm.get(pla), lastm3.get(pla)) >= similarity) {
							risk++;
						}
						if (Similarity.getSimilarity(lastm.get(pla), lastm4.get(pla)) >= similarity) {
							risk++;
						}
						if (Similarity.getSimilarity(lastm.get(pla), lastm5.get(pla)) >= similarity) {
							risk++;
						}
					} else {
						String one = lastm.get(pla);
						String two = lastm2.get(pla);
						String three = lastm3.get(pla);
						String four = lastm4.get(pla);
						String five = lastm5.get(pla);
						lastm.put(pla, newm);
						lastm2.put(pla, one);
						lastm3.put(pla, two);
						lastm4.put(pla, three);
						lastm5.put(pla, four);
						lastm6.put(pla, five);
						if (Similarity.getSimilarity(lastm.get(pla), lastm2.get(pla)) >= similarity) {
							risk++;
						}
						if (Similarity.getSimilarity(lastm.get(pla), lastm3.get(pla)) >= similarity) {
							risk++;
						}
						if (Similarity.getSimilarity(lastm.get(pla), lastm4.get(pla)) >= similarity) {
							risk++;
						}
						if (Similarity.getSimilarity(lastm.get(pla), lastm5.get(pla)) >= similarity) {
							risk++;
						}
						if (Similarity.getSimilarity(lastm.get(pla), lastm6.get(pla)) >= similarity) {
							risk++;
						}
					}
				}
				if (debug) {
					String l = (API.getPrefix() + Messages.getString("AC.174") + pla.getName() //$NON-NLS-1$
							+ Messages.getString("AC.175") //$NON-NLS-1$
							+ risk);
					if (alerttoadmins) { // $NON-NLS-1$
						API.alertMessage(l);
					} else {
						API.println(l);
					}
				}
			}
			RegisterStats.onChat(pla);
			if (debug) {
				String l = (Messages.getString("AC.177") + pla.getName()); //$NON-NLS-1$
				API.println(l);
			}
			if (risk >= 2) {
				if (vlchat.containsKey(pla)) {
					vladd = vlchat.get(pla);
				}
				vladd = vladd + 1.5;
				bad = 1;
				vlchat.put(pla, vladd);
			}
			if (containsCaseInsensitive(pla.getName(), chatexempt)) { // $NON-NLS-1$
				cancelled = 1;
			}
			if (cancelled == 1)
				return 0;

			for (String r : blacklistwords) { // $NON-NLS-1$
				if (newm.contains(r.toLowerCase())) {
					if (debug || logflags) { // $NON-NLS-1$
						String l = (Messages.getString("AC.181") + r + Messages.getString("AC.182") + pla //$NON-NLS-1$ //$NON-NLS-2$
								+ Messages.getString("AC.183") //$NON-NLS-1$
								+ str + Messages.getString("AC.184")); //$NON-NLS-1$
						if (alerttoadmins) { // $NON-NLS-1$
							API.alertMessage(l);
						} else {
							API.println(l);
						}
					}
					if (vlchat.containsKey(pla)) {
						vladd = vlchat.get(pla);
					}
					vladd = vladd + CH.getInt(Messages.getString("AC.186")); //$NON-NLS-1$
					bad = 1;
					vlchat.put(pla, vladd);
					return 1;
				}
			}
			for (String s : redflagwords) { // $NON-NLS-1$
				if (newm.contains(s.toLowerCase())) {
					if (debug || logflags) { // $NON-NLS-1$
						String l = (Messages.getString("AC.189") + s + Messages.getString("AC.190") + pla //$NON-NLS-1$ //$NON-NLS-2$
								+ Messages.getString("AC.191") + str //$NON-NLS-1$
								+ Messages.getString("AC.192")); //$NON-NLS-1$
						if (alerttoadmins) { // $NON-NLS-1$
							API.alertMessage(l);
						} else {
							API.println(l);
						}
					}
					if (vlchat.containsKey(pla)) {
						vladd = vlchat.get(pla);
					}
					vladd = vladd + 1.5;
					bad = 1;
					vlchat.put(pla, vladd);
				}
			}
			int skip = 1;
			for (String s : swhitelist) {
				if (str.toLowerCase().contains(s.toLowerCase())) {
					skip = 0;
					break;
				}
			}

			if (skip == 1) {
				if (vlchat.containsKey(pla)) {
					vladd = vlchat.get(pla);
				}
				vladd++;
				bad = 1;
				vlchat.put(pla, vladd);
				String l = API.getPrefix() + Messages.getString("AC.194") + pla //$NON-NLS-1$
						+ Messages.getString("AC.195") + str; //$NON-NLS-1$
				if (alerttoadmins) { // $NON-NLS-1$
					API.alertMessage(l);
				} else {
					API.println(l);
				}

			}
			if (!vlchat.containsKey(pla)) {
				if (debug)
					API.println(Messages.getString("AC.197") + pla); //$NON-NLS-1$
				vlchat.put(pla, 0.0);
			}
			if (vlchat.containsKey(pla) && bad == 0) {
				if (debug) {
					String l = (API.getPrefix() + Messages.getString("AC.204") + pla.getName()); //$NON-NLS-1$
					if (alerttoadmins) { // $NON-NLS-1$
						API.alertMessage(l);
					} else {
						API.println(l);
					}
				}
				vladd = vlchat.get(pla);
				if (vladd > 0)
					vladd = vladd - 1;
				vlchat.put(pla, vladd);
			}
			if (vlchat.containsKey(pla) && vlchat.get(pla) >= CH.getInt(Messages.getString("AC.198"), 8)) { //$NON-NLS-1$
				if (vlchat.get(pla) >= tippingpoint) { // $NON-NLS-1$
					if (debug) {
						String l = (API.getPrefix() + Messages.getString("AC.200") + pla.getName()); //$NON-NLS-1$
						if (alerttoadmins) { // $NON-NLS-1$
							API.alertMessage(l);
						} else {
							API.println(l);
						}
					}
					pla.sendMessage(ChatColor.translateAlternateColorCodes('&', spamsg));
					API.sendPlayerToServer(pla, CH.getString(Messages.getString("AC.202"))); //$NON-NLS-1$
					if (vlchat.get(pla) >= kickpoint) // $NON-NLS-1$
						API.kickPlayer(pla, ChatColor.translateAlternateColorCodes('&', spamsg));
				}
				return 1;
			}
			return 0;
		} else
			return 0;
	}

	public static void onPlayerChat(AsyncPlayerChatEvent event) throws IOException {
		int st = onChat(event.getMessage(), event.getPlayer());
		if (debug && vlchat.containsKey(event.getPlayer()))
			API.println(API.getPrefix() + event.getPlayer() + "'s risk level: " + vlchat.get(event.getPlayer()));
		if (st >= 1) {
			if (debug) {
				String l = Messages.getString("AC.207") + event.getPlayer(); //$NON-NLS-1$
				API.println(l);
			}
			event.setCancelled(true);
			return;
		}
		if (event.isCancelled())
			return;
		Player player = event.getPlayer();
		Player[] recipients = (Player[]) event.getRecipients().toArray((Object[]) new Player[0]);
		CCPlayer cp = null;
		for (int i = 0; i < recipients.length; i++) {
			try {
				cp = ChatCommandHandle.getCCPlayer(recipients[i]);
			} catch (IOException e) {
				e.printStackTrace();
			}
			if ((cp.chatDisabled && ChatCommandHandle.checkForChatDisable)
					|| (cp.isIgnored(player.getUniqueId().toString()) && ChatCommandHandle.checkForIgnores))
				event.getRecipients().remove(recipients[i]);
		}
		String msg = ColorManager(event.getMessage(), player);
		msg = ColorCodeManager(msg, player);
		if (msg.contentEquals(CANCEL)) {
			event.setCancelled(true);
		} else {
			Player[] players = (Player[]) event.getRecipients()
					.toArray((Object[]) new Player[event.getRecipients().size()]);
			JSONMessage.create(Messages.getString("AC.208") + player.getDisplayName() + ChatColor.RESET //$NON-NLS-1$
					+ Messages.getString("AC.209") + msg) //$NON-NLS-1$
					.suggestCommand(Messages.getString("AC.210") + player.getName()).send(players); //$NON-NLS-1$
			event.setCancelled(true);
		}
	}

	public static void onPlayerQuit(final PlayerQuitEvent event) {
		ChatCommandHandle.playerlist.removeIf(new Predicate<CCPlayer>() {
			@Override
			public boolean test(CCPlayer t) {
				return t.player.equals(event.getPlayer());
			}
		});
		if (CH.getBoolean(Messages.getString("AC.211")) && vlchat.containsKey(event.getPlayer())) { //$NON-NLS-1$
			vlchat.remove(event.getPlayer());
		}
	}

	public static void readConfig(int change) {
		YamlConfiguration c = YamlConfiguration.loadConfiguration(CH.d);
		if (change == 3)
			c.set(Messages.getString("AC.212"), Boolean.valueOf(true)); //$NON-NLS-1$
		if (change == 4)
			c.set(Messages.getString("AC.213"), Boolean.valueOf(false)); //$NON-NLS-1$
		if (change == 5)
			c.set(Messages.getString("AC.214"), Boolean.valueOf(true)); //$NON-NLS-1$
		if (change == 6)
			c.set(Messages.getString("AC.215"), Boolean.valueOf(false)); //$NON-NLS-1$
		if (change == 7)
			c.set(Messages.getString("AC.216"), Boolean.valueOf(true)); //$NON-NLS-1$
		if (change == 8)
			c.set(Messages.getString("AC.217"), Boolean.valueOf(false)); //$NON-NLS-1$
		if (change == 9)
			c.set(Messages.getString("AC.218"), Boolean.valueOf(true)); //$NON-NLS-1$
		if (change == 10)
			c.set(Messages.getString("AC.219"), Boolean.valueOf(false)); //$NON-NLS-1$
		try {
			c.save(CH.d);
		} catch (IOException e) {
			API.alertMessage(Messages.getString("AC.220")); //$NON-NLS-1$
		}
	}

	public static void reload() {
		chatfilter = CH.getBoolean(Messages.getString("AC.142"), true);
		enablecw = CH.getBoolean(Messages.getString("AC.221"), false); //$NON-NLS-1$
		swhitelist = CH.getStringList(Messages.getString("AC.222")); //$NON-NLS-1$
		similarity = CH.getDouble(Messages.getString("AC.223")); //$NON-NLS-1$
		debug = CH.getBoolean(Messages.getString("AC.224"), false); //$NON-NLS-1$
		spamsg = CH.getString(Messages.getString("AC.225")); //$NON-NLS-1$
		a = CH.getString(Messages.getString("AC.6"));
		c = CH.getString(Messages.getString("AC.8"));
		d = CH.getString(Messages.getString("AC.9"));
		f = CH.getString(Messages.getString("AC.11"));
		g = CH.getString(Messages.getString("AC.12"));
		i = CH.getString(Messages.getString("AC.14"));
		j = CH.getString(Messages.getString("AC.15"));
		l = CH.getString(Messages.getString("AC.17"));
		m = CH.getString(Messages.getString("AC.18"));

		n = CH.getString(Messages.getString("AC.21"));
		o = CH.getString(Messages.getString("AC.24"));
		p = CH.getString(Messages.getString("AC.27"));
		q = CH.getString(Messages.getString("AC.30"));
		r = CH.getString(Messages.getString("AC.33"));
		s = CH.getString(Messages.getString("AC.36"));
		t = CH.getString(Messages.getString("AC.39"));
		u = CH.getString(Messages.getString("AC.42"));
		v = CH.getString(Messages.getString("AC.45"));

		w = CH.getString(Messages.getString("AC.48"));
		x = CH.getString(Messages.getString("AC.51"));
		y = CH.getString(Messages.getString("AC.54"));
		z = CH.getString(Messages.getString("AC.57"));
		aa = CH.getString(Messages.getString("AC.60"));
		ab = CH.getString(Messages.getString("AC.63"));
		ac = CH.getString(Messages.getString("AC.20"));
		ad = CH.getString(Messages.getString("AC.23"));
		ae = CH.getString(Messages.getString("AC.26"));

		af = CH.getString(Messages.getString("AC.29"));
		ag = CH.getString(Messages.getString("AC.32"));
		ah = CH.getString(Messages.getString("AC.35"));
		ai = CH.getString(Messages.getString("AC.38"));
		aj = CH.getString(Messages.getString("AC.41"));
		ak = CH.getString(Messages.getString("AC.44"));
		al = CH.getString(Messages.getString("AC.47"));
		am = CH.getString(Messages.getString("AC.50"));
		an = CH.getString(Messages.getString("AC.53"));

		ao = CH.getString(Messages.getString("AC.56"));
		ap = CH.getString(Messages.getString("AC.59"));
		aq = CH.getString(Messages.getString("AC.62"));
		ar = CH.getString(Messages.getString("AC.65"));

		as = CH.getString(Messages.getString("AC.66"), zz);
		at = CH.getString(Messages.getString("AC.70"), zz);
		au = CH.getString(Messages.getString("AC.74"), zz);
		av = CH.getString(Messages.getString("AC.78"), zz);
		aw = CH.getString(Messages.getString("AC.82"), zz);
		ax = CH.getString(Messages.getString("AC.86"), zz);
		ay = CH.getString(Messages.getString("AC.90"), zz);

		az = CH.getString(Messages.getString("AC.94"), zz);
		ba = CH.getString(Messages.getString("AC.98"), zz);
		bb = CH.getString(Messages.getString("AC.102"), zz);
		bc = CH.getString(Messages.getString("AC.106"), zz);
		bd = CH.getString(Messages.getString("AC.110"), zz);
		be = CH.getString(Messages.getString("AC.114"), zz);
		bf = CH.getString(Messages.getString("AC.118"), zz);

		bg = CH.getString(Messages.getString("AC.122"), zz);
		bh = CH.getString(Messages.getString("AC.126"), zz);
		bi = CH.getString(Messages.getString("AC.130"), zz);
		bj = CH.getString(Messages.getString("AC.134"), zz);
		bk = CH.getString(Messages.getString("AC.138"), zz);

		kickpoint = CH.getInt(Messages.getString("AC.203"), 20);
		tippingpoint = CH.getInt(Messages.getString("AC.199"), 15);
		useai = CH.getBoolean(Messages.getString("AC.172"), true);
		logflags = CH.getBoolean(Messages.getString("AC.188"));
		alerttoadmins = CH.getBoolean(Messages.getString("AC.193"), false);
		blacklistwords = CH.getStringList(Messages.getString("AC.179"));
		redflagwords = CH.getStringList(Messages.getString("AC.187"));
		chatexempt = CH.getStringList(Messages.getString("AC.178"));
	}

	public AllChat(ExploitFixer plugin) {
		AllChat.plugin = plugin;
	}
}
