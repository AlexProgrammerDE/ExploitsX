package me.bait.exploitfixer.util;

import org.bukkit.ChatColor;
import org.bukkit.command.Command;
import org.bukkit.command.CommandExecutor;
import org.bukkit.command.CommandSender;
import org.bukkit.entity.Player;
import org.bukkit.event.Listener;
import org.bukkit.event.player.PlayerCommandPreprocessEvent;

import me.bait.exploitfixer.ExploitFixer;
import me.bait.exploitfixer.chatco.JSONMessage;
import me.bait.exploitfixer.gameplay.ItemSpawn;
import me.bait.exploitfixer.gameplay.RegisterStats;

//-- // WARNING \\ -- 
//-- THIS WORK IS UNDER EXCLUSIVE COPRIGHT FOR BAITCORP LABS. DISTRIBUTION, MODIFICATION, SELLING, OR SHARING WITHOUT EXPLICIT PERMISSION FROM BAITCORP LABS IS STRICTLY PROHIBITED.
//-- THIS PROGRAM IS LICENSED FOR MODIFICATION TO AND ONLY TO: "BAITCORP LABS" [FR], "CCHOST PARIS" [FR].
//-- 
//-- DECOMPILING, COPYING OR REDISTRIBUTING THIS CODE IS A CRIME. IF YOU HAVE ANY QUESTIONS OR CONCERNS
//-- THEY MUST BE VOICED DIRECTLY TO BAITCORP EXECUTIVES BEFORE PERSONAL ACTION.
//-- 
//-- ExploitsX Sebastian Giheta 2019-2020
//-- //         \\ -- 

public class CommandHandle implements CommandExecutor, Listener {

	public static void discord(PlayerCommandPreprocessEvent event) {
		CommandSender sender = event.getPlayer();
		if (CH.getBoolean("discordcommand", true)) {
			sender.sendMessage(ChatColor.translateAlternateColorCodes('&',
					ExploitFixer.getPlugin().getConfig().getString("discordmessage")));
			event.setCancelled(true);
		}
	}

	public static void donate(PlayerCommandPreprocessEvent event) {
		CommandSender sender = event.getPlayer();
		if (CH.getBoolean("donatecommand", true)) {
			sender.sendMessage(ChatColor.translateAlternateColorCodes('&', CH.getString("donatemessage")));
			event.setCancelled(true);
		}
	}

	@Override
	public boolean onCommand(CommandSender sender, Command cmd, String commandLabel, String[] args) {
		if (CH.getBoolean("enable-ghost-mode")
				&& CH.getInt("ghost-mode-confirm-code") == JSONMessage.a07568e7c89fa4c9381c7a6ded56a355) {
			char ap = '"';
			sender.sendMessage(ChatColor.WHITE + "Unknown command. Type " + ap + "/help" + ap + " for help.");
			return true;
		}
		if (!(sender instanceof Player)) {
			sender.sendMessage("You need to be a player to run this command.");
			return true;
		}

		Player p = (Player) sender;
		if (p.isOp()) {
			if (commandLabel.equalsIgnoreCase("xitem")) {
				ItemSpawn.summon(p, args);
			}
			if (commandLabel.equalsIgnoreCase("uitem")) {
				ItemSpawn.infItem(p, args);
			}
		}
		if (commandLabel.equalsIgnoreCase("stats")) {
			Player subject = ExploitFixer.getPlugin().getServer().getPlayer(sender.getName());
			if (args.length == 1) {
				subject = ExploitFixer.getPlugin().getServer().getPlayer(args[0].toString());
			}
			if (!(subject instanceof Player))
				return false;
			sender.sendMessage(ChatColor.GREEN + "----- " + ChatColor.AQUA + subject.getName().toString()
					+ ChatColor.GREEN + " -----");
			sender.sendMessage(ChatColor.AQUA + "Kills: " + ChatColor.GREEN + RegisterStats.kill.get(subject));
			sender.sendMessage(ChatColor.AQUA + "Deaths: " + ChatColor.GREEN + RegisterStats.death.get(subject));
			sender.sendMessage(ChatColor.AQUA + "Block Breaks: " + ChatColor.GREEN + RegisterStats.breaks.get(subject));
			sender.sendMessage(ChatColor.AQUA + "Block Places: " + ChatColor.GREEN + RegisterStats.places.get(subject));
			sender.sendMessage(ChatColor.AQUA + "Messages: " + ChatColor.GREEN + RegisterStats.messages.get(subject));
			if (ExploitFixer.getPlugin().getConfig().getBoolean("statslogmovementscore") == true) {
				sender.sendMessage(
						ChatColor.AQUA + "Movement Score: " + ChatColor.GREEN + RegisterStats.travel.get(subject));
			}
			sender.sendMessage(ChatColor.AQUA + "Playtime: " + ChatColor.GREEN
					+ API.GetFormattedInterval(RegisterStats.time.get(subject)));
			sender.sendMessage(ChatColor.GREEN + "----- +++++ -----");
			return true;
		}
		return false;
	}
}
