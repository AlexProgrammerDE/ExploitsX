package me.bait.exploitfixer.gameplay;

import org.bukkit.Bukkit;
import org.bukkit.ChatColor;
import org.bukkit.Chunk;
import org.bukkit.Material;
import org.bukkit.entity.ArmorStand;
import org.bukkit.entity.Creature;
import org.bukkit.entity.Item;
import org.bukkit.entity.Monster;
import org.bukkit.entity.Player;
import org.bukkit.entity.Vehicle;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.block.BlockRedstoneEvent;
import org.bukkit.event.entity.CreatureSpawnEvent;
import org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason;
import org.bukkit.event.entity.EntitySpawnEvent;
import org.bukkit.event.player.PlayerDropItemEvent;
import org.bukkit.event.vehicle.VehicleCreateEvent;

import me.bait.exploitfixer.exploitfixer;
import me.bait.exploitfixer.util.API;

//THIS WORK IS UNDER EXCLUSIVE COPRIGHT FOR BAITCORP LABS. DISTRIBUTION, MODIFICATION, SELLING, OR SHARING WITHOUT EXPLICIT PERMISSION FROM BAITCORP LABS IS STRICTLY PROHIBITED.
//ExploitsX Sebastian Giheta 2019-2020

public class Entity implements Listener {
	@EventHandler
	public void eggDispenser(BlockRedstoneEvent event) {
		if (event.getBlock().getType() == Material.DISPENSER || event.getBlock().getType() == Material.DROPPER) {
			org.bukkit.block.Dispenser dispenser = (org.bukkit.block.Dispenser) event.getBlock().getState();
			for (org.bukkit.inventory.ItemStack i : dispenser.getInventory().getContents()) {
				if (i != null) {
					if (i.getType() == Material.MONSTER_EGG || i.getType() == Material.MONSTER_EGGS) {
						if (exploitfixer.getPlugin().getConfig().getBoolean("removeeggs") == true) {
							i.setAmount(0);
							event.setNewCurrent(0);
							event.getBlock().setType(Material.AIR);
							if (exploitfixer.getPlugin().getConfig().getBoolean("debug") == true) {
								exploitfixer.getPlugin().getServer().getLogger()
										.info("Blocked a spawn egg at " + event.getBlock().getLocation());
							}
						}
					}
				}
			}
		}
	}

	@EventHandler
	public void onDrop(PlayerDropItemEvent event) {
		if (event.getItemDrop() instanceof Item) {
			int amount = 0;
			int max = exploitfixer.getPlugin().getConfig().getInt("Item-per-region.limit");
			for (org.bukkit.entity.Entity ents : event.getItemDrop().getLocation().getWorld()
					.getNearbyEntities(event.getItemDrop().getLocation(), 64, 64, 64)) {
				if (ents instanceof Item) {
					amount++;
				}
			}
			if (amount >= max) {
				event.setCancelled(true);
			}
		}
	}

	@EventHandler
	public void onMinecart(VehicleCreateEvent event) {
		int amount = 0;
		Chunk chunk = event.getVehicle().getChunk();
		Vehicle vehicle = event.getVehicle();
		Player player = API.getNearestPlayer(20, vehicle.getLocation());
		String formattedName = vehicle.getType().toString().toLowerCase().concat("s");
		int max = exploitfixer.getPlugin().getConfig().getInt("Vehicle-per-chunk.limit");
		for (org.bukkit.entity.Entity ents : vehicle.getLocation().getWorld().getNearbyEntities(vehicle.getLocation(),
				64, 256, 64)) {
			if (ents instanceof Vehicle) {
				amount++;
			}
		}
		if (amount >= max) {
			event.setCancelled(true);
			player.sendMessage(ChatColor.translateAlternateColorCodes('&',
					(API.getPrefix() + "&6Please limit " + formattedName + " to &r&c" + max + "&r&6 per chunk")));
			API.alertMessage(API.getPrefix() + "&6Removed &r&3" + chunk.getEntities().length + " " + formattedName
					+ "&r&6 from a lag source owned by&r&3 " + player.getName());
			Bukkit.getLogger()
					.info(ChatColor.translateAlternateColorCodes('&',
							API.getPrefix() + "&6Removed &r&3" + chunk.getEntities().length + " " + formattedName
									+ "&r&6 from a thick chunk owned by&r&3 " + player.getName()));
			for (org.bukkit.entity.Entity ent : vehicle.getChunk().getEntities()) {
				if (ent instanceof Vehicle || ent instanceof ArmorStand) {
					ent.remove();
				}
			}
		}
	}

	@EventHandler
	public void onSpawn(EntitySpawnEvent event) {
		if (event.getEntity() instanceof Item) {
			int amount = 0;
			int max = exploitfixer.getPlugin().getConfig().getInt("Item-per-region.limit");
			for (org.bukkit.entity.Entity ents : event.getEntity().getLocation().getWorld()
					.getNearbyEntities(event.getLocation(), 32, 96, 32)) {
				if (ents instanceof Item) {
					amount++;
				}
			}
			if (amount >= max) {
				event.setCancelled(true);
			}
		}
	}

	@EventHandler
	public void spawnEggs(CreatureSpawnEvent event) {
		if (event.getSpawnReason() == SpawnReason.SPAWNER_EGG) {
			if (exploitfixer.getPlugin().getConfig().getBoolean("denyeggs") == true) {
				event.setCancelled(true);
			}
		} else {
			if (event.getSpawnReason() == SpawnReason.SPAWNER) {
				Creature entity = (Creature) event.getEntity();
				if (!(entity instanceof Monster)) {
					event.setCancelled(true);
				}
			} else {
				if (event.getSpawnReason() == SpawnReason.DISPENSE_EGG) {
					if (exploitfixer.getPlugin().getConfig().getBoolean("denyeggs") == true) {
						event.getEntity().remove();
						event.setCancelled(true);
					}
				}
			}
		}
	}
}
