package me.bait.exploitfixer.gameplay;

import java.util.HashMap;

import org.bukkit.Bukkit;
import org.bukkit.ChatColor;
import org.bukkit.block.ShulkerBox;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.player.PlayerJoinEvent;
import org.bukkit.event.player.PlayerKickEvent;
import org.bukkit.event.player.PlayerQuitEvent;
import org.bukkit.inventory.meta.BlockStateMeta;

import me.bait.exploitfixer.ExploitFixer;
import me.bait.exploitfixer.util.API;

//THIS WORK IS UNDER EXCLUSIVE COPRIGHT FOR BAITCORP LABS. DISTRIBUTION, MODIFICATION, SELLING, OR SHARING WITHOUT EXPLICIT PERMISSION FROM BAITCORP LABS IS STRICTLY PROHIBITED.
//ExploitsX Sebastian Giheta 2019-2020

public class Join implements Listener {

	public static HashMap<Player, Integer> ef = new HashMap<Player, Integer>();

	public static HashMap<Player, Integer> send = new HashMap<Player, Integer>();
	int bookamt;

	public void clearbooks(Player player) {
		if (ef.containsKey(player)) {
			if (ef.get(player) > 4) {
				for (org.bukkit.inventory.ItemStack item : player.getInventory().getContents()) {
					if (item != null && item.getType() != null) {
						if (item.getType().toString().contains("BOOK")) {
							item.setAmount(0);
						}
						if (API.isShulkerBox(item.getType().toString())) {
							BlockStateMeta meta = (BlockStateMeta) item.getItemMeta();
							if (meta == null)
								return;
							ShulkerBox box = (ShulkerBox) meta.getBlockState();
							if (box == null)
								return;
							bookamt = 0;
							for (org.bukkit.inventory.ItemStack i : box.getInventory().getContents()) {
								if (i != null && i.getType() != null) {
									if (i.getType().toString().contains("BOOK")) {
										item.setAmount(0);
									}
								}
							}
						}
					}
				}
				send.put(player, 1);
			}
		}
	}

	@EventHandler
	public void onjoin(PlayerJoinEvent e) {
		if (ExploitFixer.getPlugin().getConfig().getBoolean("enableantibookban") == false)
			return;
		bookamt = 0;
		final Player player = e.getPlayer();
		bookamt = 0;
		for (org.bukkit.inventory.ItemStack item : player.getInventory().getContents()) {
			if (item != null && item.getType() != null) {
				if (item.getType().toString().contains("BOOK")) {
					bookamt = bookamt + 1;
				}
				if (bookamt > 8) {
					if (ef.containsKey(player)) {
						ef.put(player, (ef.get(player) + 1));
					} else {
						ef.put(player, 1);
					}
				}
				if (API.isShulkerBox(item.getType().toString())) {
					BlockStateMeta meta = (BlockStateMeta) item.getItemMeta();
					if (meta == null)
						return;
					ShulkerBox box = (ShulkerBox) meta.getBlockState();
					if (box == null)
						return;
					for (org.bukkit.inventory.ItemStack i : box.getInventory().getContents()) {
						if (i != null) {
							if (i.getType().toString().contains("BOOK")) {
								bookamt = bookamt + 1;
								if (bookamt > 8) {
									if (ef.containsKey(player)) {
										ef.put(player, (ef.get(player) + 1));
									} else {
										ef.put(player, 1);
									}
								}
							}
						}
					}
				}
			}

		}
		if (ef.containsKey(player)) {
			if (ef.get(player) > 4) {
				player.sendMessage(ChatColor.DARK_RED
						+ "ExploitsX > DO NOT LEAVE WITHIN 3 SECONDS. If you do, books in your inventory will be cleared. Please limit the books in your inventory at once.");
				Bukkit.getScheduler().scheduleSyncDelayedTask(ExploitFixer.getPlugin(), new Runnable() {
					@Override
					public void run() {
						ef.remove(player);
					}
				}, 60L);
			}
		}
		if (send.containsKey(player)) {
			if (send.get(player) > 0) {
				player.sendMessage(ChatColor.DARK_RED
						+ "ExploitsX > You left the server too quickly after joining, therefore your books were cleared in suspicion of a book ban.");
				send.remove(player);
			}
		}
	}

	@EventHandler
	public void onleave(PlayerQuitEvent e) {
		if (ExploitFixer.getPlugin().getConfig().getBoolean("enableantibookban") == false)
			return;
		Player player = e.getPlayer();
		clearbooks(player);
	}

	@EventHandler
	public void onleave2(PlayerKickEvent e) {
		if (ExploitFixer.getPlugin().getConfig().getBoolean("enableantibookban") == false)
			return;
		Player player = e.getPlayer();
		clearbooks(player);
	}
}