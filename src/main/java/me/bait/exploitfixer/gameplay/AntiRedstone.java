package me.bait.exploitfixer.gameplay;

import org.bukkit.Bukkit;
import org.bukkit.ChatColor;
import org.bukkit.Material;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.block.BlockRedstoneEvent;

import me.bait.exploitfixer.exploitfixer;
import me.bait.exploitfixer.util.API;
import me.bait.exploitfixer.util.TPS;

//THIS WORK IS UNDER EXCLUSIVE COPRIGHT FOR BAITCORP LABS. DISTRIBUTION, MODIFICATION, SELLING, OR SHARING WITHOUT EXPLICIT PERMISSION FROM BAITCORP LABS IS STRICTLY PROHIBITED.
//ExploitsX Sebastian Giheta 2019-2020

public class AntiRedstone implements Listener {

	private static int rcount = 0;

	private boolean isRedstoneUI(Material m) {
		switch (m) {
		case WOOD_BUTTON:
		case STONE_BUTTON:
		case TRAPPED_CHEST:
			return true;
		default:
			return false;
		}
	}

	@EventHandler
	public void onRedstoneTick(BlockRedstoneEvent event) {
		if (!isRedstoneUI(event.getBlock().getType())) {
			if (TPS.getTPS() <= exploitfixer.getPlugin().getConfig().getDouble("redcancel")) {
				event.setNewCurrent(0);
				if (TPS.getTPS() <= exploitfixer.getPlugin().getConfig().getDouble("redremove")) {
					event.getBlock().breakNaturally();
				}
				if (rcount < 2) {
					rcount = rcount + 1;
					int Blockx = event.getBlock().getLocation().getBlockX();
					int Blocky = event.getBlock().getLocation().getBlockY();
					int Blockz = event.getBlock().getLocation().getBlockZ();
					API.println(ChatColor.translateAlternateColorCodes('&',
							"&6Likely lag Machine at &cX: " + Blockx + ", Y: " + Blocky + ", Z:" + Blockz));
					Bukkit.getScheduler().scheduleSyncDelayedTask(exploitfixer.getPlugin(), new Runnable() {
						@Override
						public void run() {
							AntiRedstone.rcount = 0;
						}
					}, 80L);
				}
			}
		}
	}
}
