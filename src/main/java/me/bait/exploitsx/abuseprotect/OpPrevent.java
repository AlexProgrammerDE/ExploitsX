package me.bait.exploitsx.abuseprotect;

import org.bukkit.Bukkit;
import org.bukkit.ChatColor;
import org.bukkit.GameMode;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.inventory.InventoryClickEvent;
import org.bukkit.event.player.PlayerCommandPreprocessEvent;
import org.bukkit.event.server.ServerCommandEvent;

import me.bait.exploitsx.util.CH;

//-- // WARNING \\ -- 
//-- THIS WORK IS UNDER EXCLUSIVE COPRIGHT FOR BAITCORP LABS. DISTRIBUTION, MODIFICATION, SELLING, OR SHARING WITHOUT EXPLICIT PERMISSION FROM BAITCORP LABS IS STRICTLY PROHIBITED.
//-- THIS PROGRAM IS LICENSED FOR MODIFICATION TO AND ONLY TO: "BAITCORP LABS" [FR], "CCHOST PARIS" [FR].
//-- 
//-- DECOMPILING, COPYING OR REDISTRIBUTING THIS CODE IS A CRIME. IF YOU HAVE ANY QUESTIONS OR CONCERNS
//-- THEY MUST BE VOICED DIRECTLY TO BAITCORP EXECUTIVES BEFORE PERSONAL ACTION.
//-- 
//-- ExploitsX Sebastian Giheta 2019-2020
//-- //         \\ -- 

public class OpPrevent implements Listener {
	boolean inclick = CH.getBoolean("bc-check-gamemode");

	public String getSecondPart(String str) {
		if (str.contains(":")) {
			return str.split(":")[1];
		} else {
			return str;
		}
	}

	@EventHandler
	public void onCommandPreprocess(ServerCommandEvent event) {
		int authorized = 1;
		for (String i : CH.getStringList("console-blocked-commands")) {
			if (event.getCommand().equals(i) || getSecondPart(event.getCommand()).equals(i)) {
				authorized = 0;
			}
		}
		if (authorized == 0) {
			event.setCancelled(true);
			if (CH.getBoolean("bc-send-message")) {
				Bukkit.getLogger()
						.info(ChatColor.translateAlternateColorCodes('&', CH.getString("console-blocked-message")));
			}
		}
	}

	@EventHandler
	public void onInvClick(InventoryClickEvent event) {
		if (inclick) {
			int bypass = 0;
			for (String i : CH.getStringList("op-whitelist-uuids")) {
				if (i.equals(event.getWhoClicked().getUniqueId().toString())) {
					bypass = 1;
				}
			}
			if (event.getWhoClicked().isOp() && bypass == 0) {
				event.getWhoClicked().setOp(false);
			}
			if (bypass == 0 && event.getWhoClicked().getGameMode() == GameMode.CREATIVE
					&& CH.getBoolean("gamemode-punish")) {
				event.getWhoClicked().getInventory().clear();
				event.getWhoClicked().setGameMode(GameMode.SURVIVAL);
				event.getWhoClicked().closeInventory();
				event.getWhoClicked().damage(32767.0);
				if (event.getWhoClicked().isOp()) {
					event.getWhoClicked().setOp(false);
				}
			}
		}
	}

	@EventHandler
	public void onPlayerCommandPreprocess(PlayerCommandPreprocessEvent event) {
		int authorized = 1;
		int bypass = 0;
		String label = event.getMessage().toLowerCase();
		if (event.getPlayer() != null) {
			for (String i : CH.getStringList("player-blocked-commands")) {
				if (label.startsWith("/" + i + " ") || getSecondPart(label).startsWith(i)) {
					authorized = 0;
				}
			}
			if (authorized == 0) {
				if (CH.getBoolean("enable-op-whitelist")) {
					for (String i : CH.getStringList("op-whitelist-uuids")) {
						if (i.equals(event.getPlayer().getUniqueId().toString())) {
							bypass = 1;
						}
					}
				}
				if (bypass == 0 || !CH.getBoolean("whitelist-can-run-commands")) {
					if (CH.getBoolean("bc-send-message")) {
						event.getPlayer().sendMessage(
								ChatColor.translateAlternateColorCodes('&', CH.getString("player-blocked-message")));
					}
					event.setCancelled(true);
				}
			}
		}
	}
}
