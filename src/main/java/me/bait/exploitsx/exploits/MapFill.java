package me.bait.exploitsx.exploits;

import org.bukkit.Bukkit;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.EventPriority;
import org.bukkit.event.Listener;
import org.bukkit.event.block.Action;
import org.bukkit.event.player.PlayerInteractEvent;
import org.bukkit.event.player.PlayerQuitEvent;

import me.bait.exploitsx.util.API;
import me.bait.exploitsx.util.CH;
import me.bait.exploitsx.util.ViolationUtils;

//// WARNING \\
//THIS WORK IS UNDER EXCLUSIVE COPRIGHT FOR BAITCORP LABS. DISTRIBUTION, MODIFICATION, SELLING, OR SHARING WITHOUT EXPLICIT PERMISSION FROM BAITCORP LABS IS STRICTLY PROHIBITED.
//THIS PROGRAM IS LICENSED FOR MODIFICATION TO AND ONLY TO: "BAITCORP LABS" [FR], "CCHOST PARIS" [FR].
//
//DECOMPILING, COPYING OR REDISTRIBUTING THIS CODE IS A CRIME. IF YOU HAVE ANY QUESTIONS OR CONCERNS
//THEY MUST BE VOICED DIRECTLY TO BAITCORP EXECUTIVES BEFORE PERSONAL ACTION.
//
//ExploitsX Sebastian Giheta 2019-2020
////         \\

public class MapFill implements Listener {

	static boolean enable = CH.getBoolean("mapspampatch");

	static boolean clearleave = CH.getBoolean("mapclearleave");

	static int increment = CH.getInt("mapspamincrement");
	public static void reload() {
		enable = CH.getBoolean("mapspampatch");
		clearleave = CH.getBoolean("mapclearleave");
		increment = CH.getInt("mapspamincrement");
	}
	ViolationUtils mapViolations = new ViolationUtils();

	int version = Integer.parseInt(Bukkit.getServer().getBukkitVersion().split("-")[0].replaceAll("\\.", ""));

	@EventHandler(priority = EventPriority.HIGH)
	public void onPlayerInteractEvent(PlayerInteractEvent event) {
		if (event.getItem() != null) {
			Action a = event.getAction();
			if (((a == Action.RIGHT_CLICK_AIR || a == Action.RIGHT_CLICK_BLOCK) && (event.getItem() != null)
					&& (event.getItem().getType().toString().toLowerCase().contains("map"))) && enable) {
				Player p = event.getPlayer();
				mapViolations.addVls(p, 1);
				if (mapViolations.getVls(p) >= increment) {
					event.setCancelled(true);
					API.sendMessage(p, API.getPrefix() + "> &6Please relog to fill maps.");
				}
			}
		}
	}

	@EventHandler
	public void onPlayerLeave(PlayerQuitEvent event) {
		if (enable && clearleave) {
			mapViolations.resetVls(event.getPlayer());
		}
	}
}
