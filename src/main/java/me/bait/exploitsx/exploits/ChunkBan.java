package me.bait.exploitsx.exploits;

import me.bait.exploitsx.ExploitsX;
import me.bait.exploitsx.util.API;
import me.bait.exploitsx.util.ConfigHelper;
import org.bukkit.ChatColor;
import org.bukkit.block.Block;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.block.BlockPlaceEvent;
import org.bukkit.event.hanging.HangingPlaceEvent;

//-- // WARNING \\ --
// Licence publique Creative Commons Attribution - Utilisation non commerciale - Pas d’Œuvre dérivée 4.0 International
//        Lorsque Vous exercez les Droits accordés par la licence (définis ci-dessous), Vous acceptez d'être lié par les termes et conditions de la présente Licence publique Creative Commons Attribution - Utilisation non commerciale - Pas d’Œuvre dérivée 4.0 International (la « Licence publique »). Dans la mesure où la présente Licence publique peut être interprétée comme un contrat, Vous bénéficiez des Droits accordés par la licence en contrepartie de Votre acceptation des présents termes et conditions, et le Donneur de licence Vous accorde ces droits en contrepartie des avantages que lui procure le fait de mettre à disposition l’Œuvre sous licence en vertu des présents termes et conditions.
//-- https://creativecommons.org/licenses/by-nc-nd/4.0/deed.fr
//-- ExploitsX Sebastian Giheta 2019-2020
//-- //         \\ --

public class ChunkBan implements Listener {

    @EventHandler
    public void hangingPlace(HangingPlaceEvent event) {
        if (ExploitsX.getPlugin().getConfig().getBoolean("patchchunkban")) {
            if (event.getBlock().getChunk().getEntities().length > ConfigHelper.getInt("ifentitymax", 600)) {
                event.getPlayer().sendMessage(ChatColor.translateAlternateColorCodes('&', (API.getPrefix()
                        + ConfigHelper.getString("chunkbanitemframemsg", "&aItem Frames are limited per chunk, sorry."))));
                event.setCancelled(true);
            }
        }
    }

    @EventHandler
    public void onPlace(BlockPlaceEvent event) {
        if (ExploitsX.getPlugin().getConfig().getBoolean("patchchunkban")) {
            Block block = event.getBlock();
            Player player = event.getPlayer();
            if (API.isTile(block.getType().toString())
                    && (event.getBlock().getChunk().getTileEntities()).length > ExploitsX.getPlugin().getConfig()
                    .getInt("tileentitymax")) {
                event.setCancelled(true);
                player.sendMessage(ChatColor.translateAlternateColorCodes('&',
                        ExploitsX.getPlugin().getConfig().getString("chunkbanmsg")));
            }
            int status = 0;
            String g = block.getType().toString();
            if (g.equals("SKULL") || g.equals("PLAYER_HEAD") || g.equals("CREEPER_HEAD") || g.equals("ZOMBIE_HEAD")
                    || g.equals("WITHER_SKELETON_SKULL") || g.equals("SKELETON_SKULL") || g.equals("SKULL_ITEM"))
                status = 1;
            if (status == 1 && (block.getChunk().getTileEntities()).length > ExploitsX.getPlugin().getConfig()
                    .getInt("skullmax")) {
                event.setCancelled(true);
                player.sendMessage(ChatColor.translateAlternateColorCodes('&',
                        ExploitsX.getPlugin().getConfig().getString("chunkbanmsg")));
            }
        }
    }
}