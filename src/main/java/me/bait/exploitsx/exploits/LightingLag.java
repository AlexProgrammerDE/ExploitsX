package me.bait.exploitsx.exploits;

//By IzDaBait ~~ Bait#8888 Many thanks to Mason a.k.a "CuckToombstone" for violationmap help

import me.bait.exploitsx.ExploitsX;
import me.bait.exploitsx.util.API;
import me.bait.exploitsx.util.ConfigHelper;
import me.bait.exploitsx.util.TPS;
import me.bait.exploitsx.util.ViolationUtils;
import org.bukkit.Location;
import org.bukkit.Material;
import org.bukkit.World;
import org.bukkit.enchantments.Enchantment;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.block.BlockBreakEvent;
import org.bukkit.event.block.BlockPistonExtendEvent;
import org.bukkit.event.block.BlockPistonRetractEvent;
import org.bukkit.event.block.BlockPlaceEvent;
import org.bukkit.inventory.ItemStack;
import org.bukkit.scheduler.BukkitRunnable;

public class LightingLag implements Listener {

    static ViolationUtils breakMan = new ViolationUtils();

    private static boolean checksur = ConfigHelper.getBoolean("check-surroundings", true);

    private static boolean patchef = ConfigHelper.getBoolean("patch-efficiency", true);
    private static int skcancel = ConfigHelper.getInt("skylight-cancel", 25);
    private static int skwarn = ConfigHelper.getInt("skylight-warn", 15);
    private static int skkick = ConfigHelper.getInt("skylight-kick", 35);

    public static void begin() {
        breakMan.begin();
    }

    public static void reload() {
        checksur = ConfigHelper.getBoolean("check-surroundings", true);
        skcancel = ConfigHelper.getInt("skylight-cancel", 25);
        skwarn = ConfigHelper.getInt("skylight-warn", 15);
        skkick = ConfigHelper.getInt("skylight-kick", 35);
        patchef = ConfigHelper.getBoolean("patch-efficiency", true);
    }

    @SuppressWarnings("deprecation")
    @EventHandler
    public void onbreak(BlockBreakEvent event) {
        Player p = event.getPlayer();
        if (p == null)
            return;
        if (API.getVersionInt() <= 1122) {
            ItemStack e = p.getItemInHand();
            if (patchef && e != null && e.getEnchantments() != null
                    && e.containsEnchantment(Enchantment.DIG_SPEED)
                    && e.getEnchantments().containsKey(Enchantment.DIG_SPEED)
                    && e.getEnchantmentLevel(Enchantment.DIG_SPEED) >= 5) {
                e.removeEnchantment(Enchantment.DIG_SPEED);
                e.addEnchantment(Enchantment.DIG_SPEED, 5);
            }
        }
        final Player player = event.getPlayer();
        Location l = event.getBlock().getLocation();
        int x = l.getBlockX();
        int y = l.getBlockY();
        int z = l.getBlockZ();
        World w = l.getWorld();
        if (w.getBlockAt(new Location(event.getBlock().getWorld(), x, y - 1.0, z)).getType() == Material.AIR) {
            if (checksur && breakMan.vlMapContainsPlayer(player) && breakMan.getVls(player) > 4) {
                if (w.getBlockAt(new Location(w, x - 1.0, y, z)).getType() == Material.AIR)
                    return;
                if (w.getBlockAt(new Location(w, x + 1.0, y, z)).getType() == Material.AIR)
                    return;
                if (w.getBlockAt(new Location(w, x, y, z - 1.0)).getType() == Material.AIR)
                    return;
                if (w.getBlockAt(new Location(w, x, y, z + 1.0)).getType() == Material.AIR)
                    return;
            }
            breakMan.addVls(player, 1);
            new BukkitRunnable() {
                @Override
                public void run() {
                    if (player.isOnline()) {
                        if (breakMan.vlMapContainsPlayer(player)) {
                            if (breakMan.getVls(player) > 1) {
                                breakMan.removeVL(player);
                            }
                            if (breakMan.getVls(player) < 2) {
                                breakMan.resetVls(player);
                            }
                        }
                    } else {
                        breakMan.resetVls(player);
                    }
                }
            }.runTaskLater(ExploitsX.getPlugin(), 100L);
            if (breakMan.getVls(player) == skwarn) {
                API.sendMessage(player, API.getPrefix() + " > &6Please slow down or you will be kicked");
            }
            if (breakMan.getVls(player) == (skwarn + skcancel) / 2) {
                API.sendMessage(player, API.getPrefix() + " > &4Slow down your light-intensive block breaking.");
            }
            if (breakMan.getVls(player) >= skcancel) {
                event.setCancelled(true);
            }
            if (breakMan.getVls(player) >= (skcancel + skkick) / 2) {
                API.sendMessage(player, API.getPrefix() + " > &4&lSlow down your light-intensive block breaking.");
            }
            if (breakMan.getVls(player) >= skkick) {
                API.kickPlayer(player,
                        API.getPrefix() + " > &6You were kicked for light lag. (" + breakMan.getVls(player) + "vls)");
                API.alertMessage(API.getPrefix() + "&c " + player.getName() + "> &r&6Has been kicked for lightlag ("
                        + breakMan.getVls(player) + "vls)");
                breakMan.resetVls(player);
            }
        }
    }

    @EventHandler
    public void onPistonEvent(final BlockPistonRetractEvent e) {
        if (TPS.getTPS() <= ExploitsX.getPlugin().getConfig().getDouble("pistonint")) {
            e.setCancelled(true);
        }
        if (ExploitsX.getPlugin().getConfig().getBoolean("skylight")
                && ExploitsX.getPlugin().getConfig().getBoolean("patch-piston")
                && e.getBlock().getY() > ExploitsX.getPlugin().getConfig().getInt("ylevel")) {
            e.setCancelled(true);
        }
    }

    @EventHandler
    public void onPistonEvent2(final BlockPistonExtendEvent e) {
        if (TPS.getTPS() <= ExploitsX.getPlugin().getConfig().getDouble("pistonint")) {
            e.setCancelled(true);
        }
        if (ExploitsX.getPlugin().getConfig().getBoolean("skylight")
                && ExploitsX.getPlugin().getConfig().getBoolean("patch-piston")
                && e.getBlock().getY() > ExploitsX.getPlugin().getConfig().getInt("ylevel")) {
            e.setCancelled(true);
        }
    }

    @EventHandler
    public void onPlace(BlockPlaceEvent event) {
        final Player player = event.getPlayer();
        Location l = event.getBlock().getLocation();
        int x = l.getBlockX();
        int y = l.getBlockY();
        int z = l.getBlockZ();
        World w = l.getWorld();
        if (w.getBlockAt(new Location(event.getBlock().getWorld(), x, y - 1.0, z)).getType() == Material.AIR) {
            if (checksur && breakMan.vlMapContainsPlayer(player) && breakMan.getVls(player) > 4) {
                if (w.getBlockAt(new Location(w, x - 1.0, y, z)).getType() == Material.AIR)
                    return;
                if (w.getBlockAt(new Location(w, x + 1.0, y, z)).getType() == Material.AIR)
                    return;
                if (w.getBlockAt(new Location(w, x, y, z - 1.0)).getType() == Material.AIR)
                    return;
                if (w.getBlockAt(new Location(w, x, y, z + 1.0)).getType() == Material.AIR)
                    return;
            }
            breakMan.addVls(player, 1);
            if (breakMan.getVls(player) == skwarn) {
                API.sendMessage(player, API.getPrefix() + " > &6Please slow down or you will be kicked");
            }
            if (breakMan.getVls(player) == (skwarn + skcancel) / 2) {
                API.sendMessage(player, API.getPrefix() + " > &4Slow down your light-intensive block breaking.");
            }
            if (breakMan.getVls(player) >= skcancel) {
                event.setCancelled(true);
            }
            if (breakMan.getVls(player) >= (skcancel + skkick) / 2) {
                API.sendMessage(player, API.getPrefix() + " > &4&lSlow down your light-intensive block breaking.");
            }
            if (breakMan.getVls(player) >= skkick) {
                API.kickPlayer(player,
                        API.getPrefix() + " > &6You were kicked for light lag. (" + breakMan.getVls(player) + "vls)");
                API.alertMessage(API.getPrefix() + "&c " + player.getName() + "> &r&6Has been kicked for lightlag ("
                        + breakMan.getVls(player) + "vls)");
                breakMan.resetVls(player);
            }
            new BukkitRunnable() {
                @Override
                public void run() {
                    if (player.isOnline()) {
                        if (breakMan.vlMapContainsPlayer(player)) {
                            if (breakMan.getVls(player) > 1) {
                                breakMan.removeVL(player);
                            }
                            if (breakMan.getVls(player) < 2) {
                                breakMan.resetVls(player);
                            }
                        }
                    } else {
                        breakMan.resetVls(player);
                    }
                }
            }.runTaskLater(ExploitsX.getPlugin(), 100);
        }
    }
}
